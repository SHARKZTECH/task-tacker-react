{"version":3,"sources":["components/Buttons.js","components/Header.js","components/Task.js","components/Tasks.js","components/Addtask.js","components/Footer.js","components/About.js","components/App.js","index.js"],"names":["Buttons","text","color","onAdd","onClick","className","style","backgroundColor","defaultProps","Header","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","Addtask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","name","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setshowAddTask","setTasks","useEffect","getTasks","a","fetchtasks","tasksFrmServer","fetch","res","json","data","fetchtask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","upToggle","path","element","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fea9687.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Buttons = ({text,color,onAdd}) => {\r\n  \r\n    return (\r\n        <button onClick={onAdd} className='btn' style={{backgroundColor:color}}>{text}</button>\r\n    )\r\n}\r\n\r\nButtons.defaultProps={\r\n   color:'steelblue',\r\n    text :'Add'\r\n}\r\n\r\n\r\nexport default Buttons\r\n","import React from 'react'\r\nimport Buttons from './Buttons'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst Header = ({onAdd,showAdd}) => {\r\n    const location = useLocation()\r\n       return (\r\n       \r\n        <header className='header'>\r\n            <h1 style={{color:'#287'}}>TASK TRACKER</h1>\r\n            {  location.pathname === '/' &&\r\n                <Buttons onAdd={onAdd} text={showAdd ? 'Close' : 'Add'} color={showAdd?'red':'green'}/>}\r\n        </header>\r\n    )\r\n}\r\n\r\n//INTERNAL STYLING\r\n// const headingstyle={\r\n//     backgroundColor :\"#acacac\",\r\n// }\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {FaTimes} from 'react-icons/fa'\r\nconst Task = ({task,onDelete,onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder? 'reminder' : ''}`} onDoubleClick={()=>onToggle(task.id)}>\r\n            <h3>{task.text}\r\n            <FaTimes onClick={()=>onDelete(task.id)} style={{color:'red',cursor: 'pointer'}}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport Task from './Task'\r\n\r\nconst Tasks = ({tasks,onDelete,onToggle}) => {\r\n    return (\r\n        <>\r\n          {\r\n              tasks.map((task)=>(\r\n                  <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n              ))\r\n          }  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nconst Addtask = ({onAdd}) => {\r\n   const [text,setText]=useState(\"\");\r\n   const [day,setDay]=useState(\"\");\r\n   const [reminder,setReminder]=useState(false);\r\nconst onSubmit=(e)=>{\r\n   e.preventDefault();\r\n   if(!text){\r\n      alert(\"pliz add task\")\r\n      return\r\n   }\r\n   onAdd({text,day,reminder})\r\n   setText(\"\")\r\n   setDay(\"\")\r\n   setReminder(false)\r\n\r\n}\r\n    return (\r\n      <form className='add-form' onSubmit={onSubmit}>\r\n          <div className='form-control'>\r\n             <label htmlFor=\"task\">Task</label>\r\n             <input type=\"text\" name='task' placeholder='Add Task' \r\n               value={text} onChange={(e)=>setText(e.target.value)}\r\n             />        \r\n          </div>\r\n          <div className='form-control'>\r\n             <label htmlFor=\"day\">Day & Time</label>\r\n             <input type=\"text\" name='day' placeholder='Add Day & Time'\r\n              value={day} onChange={(e)=>setDay(e.target.value)}\r\n             />        \r\n          </div>\r\n          <div className='form-control form-control-check'> \r\n             <label htmlFor=\"reminder\">Reminder</label>\r\n             <input type=\"checkbox\" name='reminder' \r\n             checked={reminder}\r\n              value={reminder} onChange={(e)=>setReminder(e.currentTarget.checked)}\r\n             />        \r\n          </div>\r\n          <input type=\"submit\" value=\"Save Task\" className='btn btn-block' />\r\n\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Addtask\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy;  Sharkz Tech 2021</p>\r\n            <Link to='/about'>About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h4>Version 1.0.0</h4>\r\n      <Link to='/'>Go Back</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import './App.css';\nimport { useState,useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\n\n\nimport Header from './Header';\nimport Tasks from './Tasks';\nimport Addtask from './Addtask';\nimport Footer from './Footer';\nimport About from './About';\n\nfunction App() {\n  const [showAddTask,setshowAddTask]=useState(false)\n  const [tasks,setTasks]=useState([ ])\n\n  useEffect(()=>{\n     const getTasks= async ()=>{\n       const tasksFrmServer= await fetchtasks()\n       setTasks(tasksFrmServer);\n     }\n     getTasks();\n  },[])\n  //fect tasks\n  const fetchtasks= async ()=>{\n    const res=await fetch(\"http://localhost:5000/tasks\")\n    const data =await res.json()\n    return data;\n  }\n    //fect task\n    const fetchtask= async (id)=>{\n      const res=await fetch(`http://localhost:5000/tasks/${id}`)\n      const data =await res.json()\n      return data;\n    }\n//Add Task\nconst addTask= async (task)=>{\n  const res=await fetch('http://localhost:5000/tasks',{\n    method:'POST',\n    headers:{\n      'Content-type':'application/json'\n    },\n    body:JSON.stringify(task),\n  })  \n\n  const data=await res.json()\n  setTasks([...tasks,data]);\n  // const id=Math.floor(Math.random()*10000)+1;\n  // const newtask={id,...task};\n\n  // setTasks([newtask,...tasks])\n \n}\n//Delete task\nconst deleteTask=async (id)=>{\n  await fetch(`http://localhost:5000/tasks/${id}`,{\n    method:'DELETE'\n  })\n  setTasks(tasks.filter((task)=>task.id!==id))\n}\n//Toggle Reminder\nconst toggleReminder= async (id)=>{\n  const taskToToggle= await fetchtask(id);\n  const upToggle={...taskToToggle,reminder:!taskToToggle.reminder}\n\n  const res=await fetch(`http://localhost:5000/tasks/${id}`,{\n    method:'PUT',\n    headers:{\n      'Content-type':'application/json'\n    },\n    body:JSON.stringify(upToggle),\n  })\n  const data= await res.json()\n\n  setTasks(tasks.map((task)=>\n    task.id===id ? {...task,reminder: data.reminder}:task\n  ))\n}\n  return (\n    <Router>\n    <div  className=\"container\">\n      <Header onAdd={()=>setshowAddTask\n      (!showAddTask)} showAdd={showAddTask} />\n       <Routes>\n       <Route\n            path='/'\n            element={\n              <>\n     {showAddTask && <Addtask onAdd={addTask}/>} \n     {tasks.length>0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n     : 'No tasks !'} \n           </>\n            }\n          />\n          <Route path='/about' element={<About />} />\n        </Routes>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}